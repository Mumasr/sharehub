diff --git a/Detour/Include/DetourCommon.h b/Detour/Include/DetourCommon.h
index 113e8c3..34b9e96 100644
--- a/Detour/Include/DetourCommon.h
+++ b/Detour/Include/DetourCommon.h
@@ -18,10 +18,11 @@
 
 #ifndef DETOURCOMMON_H
 #define DETOURCOMMON_H
-
+#define _USE_MATH_DEFINES
 #include "DetourMath.h"
 #include <stddef.h>
-
+#define RotateDeg 90
+#define RotateDegAddTile 0
 /**
 @defgroup detour Detour
 
@@ -34,6 +35,15 @@ feature to find minor members.
 
 /// @name General helper functions
 /// @{
+inline void testRotateDegAroundX(float* x, float* y, float* z, float deg)
+{
+	deg = deg * (float(M_PI) / 180.0f);
+	float y_o = *y;
+	float z_o = *z;
+	*y = cosf(deg) * y_o - sinf(deg) * z_o;
+	*z = sinf(deg) * y_o + cosf(deg) * z_o;
+}
+
 
 /// Used to ignore a function parameter.  VS complains about unused parameters
 /// and this silences the warning.
diff --git a/Detour/Source/DetourNavMesh.cpp b/Detour/Source/DetourNavMesh.cpp
index b119cd5..b428306 100644
--- a/Detour/Source/DetourNavMesh.cpp
+++ b/Detour/Source/DetourNavMesh.cpp
@@ -994,7 +994,14 @@ dtStatus dtNavMesh::addTile(unsigned char* data, int dataSize, int flags,
 	tile->detailTris = dtGetThenAdvanceBufferPointer<unsigned char>(d, detailTrisSize);
 	tile->bvTree = dtGetThenAdvanceBufferPointer<dtBVNode>(d, bvtreeSize);
 	tile->offMeshCons = dtGetThenAdvanceBufferPointer<dtOffMeshConnection>(d, offMeshLinksSize);
-
+	for (int i = 0; i < header->vertCount; i++)
+	{
+		testRotateDegAroundX(&tile->verts[i * 3], &tile->verts[i * 3 + 1], &tile->verts[i * 3 + 2], RotateDegAddTile);
+	}
+	for (int i = 0; i < header->detailVertCount; i++)
+	{
+		testRotateDegAroundX(&tile->detailVerts[i * 3], &tile->detailVerts[i * 3 + 1], &tile->detailVerts[i * 3 + 2], RotateDegAddTile);
+	}
 	// If there are no items in the bvtree, reset the tree pointer.
 	if (!bvtreeSize)
 		tile->bvTree = 0;
diff --git a/RecastDemo/Include/MeshLoaderObj.h b/RecastDemo/Include/MeshLoaderObj.h
index 8567432..1f0ba8d 100644
--- a/RecastDemo/Include/MeshLoaderObj.h
+++ b/RecastDemo/Include/MeshLoaderObj.h
@@ -29,7 +29,7 @@ public:
 	
 	bool load(const std::string& fileName);
 
-	const float* getVerts() const { return m_verts; }
+	float* getVerts() const { return m_verts; }
 	const float* getNormals() const { return m_normals; }
 	const int* getTris() const { return m_tris; }
 	int getVertCount() const { return m_vertCount; }
diff --git a/RecastDemo/Source/Sample.cpp b/RecastDemo/Source/Sample.cpp
index d8c4cfd..d42aaf2 100644
--- a/RecastDemo/Source/Sample.cpp
+++ b/RecastDemo/Source/Sample.cpp
@@ -34,6 +34,7 @@
 #ifdef WIN32
 #	define snprintf _snprintf
 #endif
+#include <DetourCommon.h>
 
 unsigned int SampleDebugDraw::areaToCol(unsigned int area)
 {
@@ -127,6 +128,11 @@ void Sample::handleRenderOverlay(double* /*proj*/, double* /*model*/, int* /*vie
 void Sample::handleMeshChanged(InputGeom* geom)
 {
 	m_geom = geom;
+	float* point = m_geom->getMesh()->getVerts();
+	for (int i = 0; i < m_geom->getMesh()->getVertCount(); i++)
+	{
+		testRotateDegAroundX(&point[i * 3], &point[i * 3 + 1], &point[i * 3 + 2], RotateDeg);
+	}
 
 	const BuildSettings* buildSettings = geom->getBuildSettings();
 	if (buildSettings)
